org: messaismael
app: sls-crud
service: sls-crud
frameworkVersion: "3"

custom:
  tableName: 'contacts-table-${sls:stage}' # Table name based on the stage.

provider:
  name: aws
  runtime: nodejs18.x  # Runtime of the functions.
  iam:
    role: # Here we create a role that gives permissions to our functions on our DynamoDB table. 
      statements:
        - Effect: Allow
          Action:
            - dynamodb:*
          Resource: 
            - Fn::GetAtt: [ ContactTable, Arn ] 
  environment:
    TABLE_NAME: ${self:custom.tableName} # adding table name as environment variable.
    
functions: # Here we define our functions with their triggers, in our case, we trigger our function by API call.
  list:
    handler: handler.getAllContact # handler
    events:
      - httpApi: # API Gateway trigger
          path: /contact
          method: get 

  retrieve:
    handler: handler.retrieveContact
    events:
      - httpApi:
          path: /contact/{contactId}
          method: get 
 
  create:
    handler: handler.createContact
    events:
      - httpApi:
          path: /contact
          method: post 

  update:
    handler: handler.updateContact
    events:
      - httpApi:
          path: /contact/{contactId}
          method: patch 

  delete:
    handler: handler.deleteContact
    events:
      - httpApi:
          path: /contact/{contactId}
          method: delete

resources:
  Resources:
    ContactTable: # Here we have the definition of our DynamoDb Table 
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          - AttributeName: "contactId"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "contactId"
            KeyType: "HASH"
        BillingMode: "PAY_PER_REQUEST"
        TableName: ${self:custom.tableName} # custom table name based on stage
